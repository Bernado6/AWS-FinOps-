{
 "Resources": {
  "CleanSageMakerResourcesFunctionCFN49D28786": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "ImageUri": {
      "Fn::Sub": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:48b7c58f01367ed985b683e641eac4a8d647290f47213202ec200eae2affe0a4"
     }
    },
    "Environment": {
     "Variables": {
      "ENDPOINT_EXCLUDE_TAG": "{\"Key\": \"env\", \"Value\": \"prod\"}",
      "NOTEBOOK_EXCLUDE_TAG": "{\"Key\": \"env\", \"Value\": \"prod\"}",
      "MAX_COUNT": "100",
      "LOG_LEVEL": "INFO"
     }
    },
    "FunctionName": "Clean-SageMaker-Resources-fn",
    "MemorySize": 10240,
    "PackageType": "Image",
    "Role": "arn:aws:iam::690288626781:role/Sagemaker-Endpoint-Creation-Role",
    "Tags": [
     {
      "Key": "CreatedBy",
      "Value": "Bkipngeno"
     },
     {
      "Key": "Name",
      "Value": "FinOps"
     },
     {
      "Key": "Owner",
      "Value": "Big Data"
     },
     {
      "Key": "Project",
      "Value": "Financial Operations"
     },
     {
      "Key": "Squad",
      "Value": "GenAI"
     },
     {
      "Key": "Tribe",
      "Value": "Big Data and AI"
     }
    ],
    "Timeout": 600
   },
   "Metadata": {
    "aws:cdk:path": "SageMakerStack/Clean-SageMaker-Resources-Function-CFN/Resource",
    "aws:asset:path": "asset.48b7c58f01367ed985b683e641eac4a8d647290f47213202ec200eae2affe0a4",
    "aws:asset:dockerfile-path": "Dockerfile",
    "aws:asset:property": "Code.ImageUri"
   }
  },
  "CreateSageMakerEndpointFunctionCFNA342DB59": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "ImageUri": {
      "Fn::Sub": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:2a0032ead8fdcecfc6c9b57b62d27baf69d05bfcbd74d55e23f13e213499e7d3"
     }
    },
    "Environment": {
     "Variables": {
      "ENDPOINT_SPEC": "[{\"EndpointConfigName\": \"HR-App-Endpint\",\"EndpointName\": \"HR-App-Endpint\"}, {\"EndpointConfigName\": \"Financial-llama-config-no-autoscaling\",\"EndpointName\": \"Financial-Llama-Model-Endpoint\"}, {\"EndpointConfigName\": \"Service-Management-Chatbot-Endpoint\",\"EndpointName\": \"Service-Management-Chatbot-Endpoint\"}, {\"EndpointConfigName\": \"Zuri-Endpoint\",\"EndpointName\": \"Zuri-Endpoint\"},{\"EndpointConfigName\": \"Bedrock-HR-App-Endpoint\",\"EndpointName\": \"Bedrock-HR-App-Endpoint\"}]",
      "MAX_COUNT": "100",
      "TAGS": "[{\"Key\": \"Project\", \"Value\": \"GenAI\"}, {\"Key\": \"CreatedBy\", \"Value\": \"GenAI\"}, {\"Key\": \"Owner\", \"Value\": \"GenAI\"}, {\"Key\": \"Environment\", \"Value\": \"UAT\"}]"
     }
    },
    "FunctionName": "Create-SageMaker-Endpoint-fn",
    "MemorySize": 10240,
    "PackageType": "Image",
    "Role": "arn:aws:iam::690288626781:role/Sagemaker-Endpoint-Creation-Role",
    "Tags": [
     {
      "Key": "CreatedBy",
      "Value": "Bkipngeno"
     },
     {
      "Key": "Name",
      "Value": "FinOps"
     },
     {
      "Key": "Owner",
      "Value": "Big Data"
     },
     {
      "Key": "Project",
      "Value": "Financial Operations"
     },
     {
      "Key": "Squad",
      "Value": "GenAI"
     },
     {
      "Key": "Tribe",
      "Value": "Big Data and AI"
     }
    ],
    "Timeout": 600
   },
   "Metadata": {
    "aws:cdk:path": "SageMakerStack/Create-SageMaker-Endpoint-Function-CFN/Resource",
    "aws:asset:path": "asset.2a0032ead8fdcecfc6c9b57b62d27baf69d05bfcbd74d55e23f13e213499e7d3",
    "aws:asset:dockerfile-path": "Dockerfile",
    "aws:asset:property": "Code.ImageUri"
   }
  },
  "CleanSageMakerResourcesFunctionScheduleBE07D931": {
   "Type": "AWS::Events::Rule",
   "Properties": {
    "ScheduleExpression": "cron(0 16 * * ? *)",
    "State": "ENABLED",
    "Targets": [
     {
      "Arn": {
       "Fn::GetAtt": [
        "CleanSageMakerResourcesFunctionCFN49D28786",
        "Arn"
       ]
      },
      "Id": "Target0"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "SageMakerStack/Clean-SageMaker-Resources-Function-Schedule/Resource"
   }
  },
  "CleanSageMakerResourcesFunctionScheduleAllowEventRuleSageMakerStackCleanSageMakerResourcesFunctionCFNF7041A0ED24269FA": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CleanSageMakerResourcesFunctionCFN49D28786",
      "Arn"
     ]
    },
    "Principal": "events.amazonaws.com",
    "SourceArn": {
     "Fn::GetAtt": [
      "CleanSageMakerResourcesFunctionScheduleBE07D931",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "SageMakerStack/Clean-SageMaker-Resources-Function-Schedule/AllowEventRuleSageMakerStackCleanSageMakerResourcesFunctionCFNF7041A0E"
   }
  },
  "CreateSageMakerEndpointFunctionSchedule37B87E25": {
   "Type": "AWS::Events::Rule",
   "Properties": {
    "ScheduleExpression": "cron(0 04 ? * MON-FRI *)",
    "State": "ENABLED",
    "Targets": [
     {
      "Arn": {
       "Fn::GetAtt": [
        "CreateSageMakerEndpointFunctionCFNA342DB59",
        "Arn"
       ]
      },
      "Id": "Target0"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "SageMakerStack/Create-SageMaker-Endpoint-Function-Schedule/Resource"
   }
  },
  "CreateSageMakerEndpointFunctionScheduleAllowEventRuleSageMakerStackCreateSageMakerEndpointFunctionCFN752B9BE375E29EF3": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CreateSageMakerEndpointFunctionCFNA342DB59",
      "Arn"
     ]
    },
    "Principal": "events.amazonaws.com",
    "SourceArn": {
     "Fn::GetAtt": [
      "CreateSageMakerEndpointFunctionSchedule37B87E25",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "SageMakerStack/Create-SageMaker-Endpoint-Function-Schedule/AllowEventRuleSageMakerStackCreateSageMakerEndpointFunctionCFN752B9BE3"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/01Oyw7CMAz7Fu5deEtceQiJE2h8ACpdGGFbOzUpCE37d9ohJE52bCfxDKaLJUxG+sWZKaqspit0Z9GmUjmyC96git6lq3VzLTR0O2cq9IdGl7gP1gg5q7Y3+89P6BtijlOv0PiLZkZh+NtcJyV5kGPrmMT590YzKnyijdEuDzWmUwn7Xg352KokWyb5GKQNMgR+JSPfOluQDG9Pb7k7O57DdAKr0YOJMh+sUIOQf/EDOijry/kAAAA="
   },
   "Metadata": {
    "aws:cdk:path": "SageMakerStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "CleanSageMakerResourcesFunction": {
   "Description": "Clean SageMaker Resources Lambda Function ARN",
   "Value": {
    "Fn::GetAtt": [
     "CleanSageMakerResourcesFunctionCFN49D28786",
     "Arn"
    ]
   }
  },
  "existingsagemakerendpointcreationrole": {
   "Description": "Implicit IAM Role created for lambda function",
   "Value": "arn:aws:iam::690288626781:role/Sagemaker-Endpoint-Creation-Role"
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "il-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}